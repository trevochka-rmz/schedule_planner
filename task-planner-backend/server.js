require('dotenv').config(); // –ü–æ–¥–∫–ª—é—á–∞–µ–º dotenv –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å .env
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const connectDB = require('./config/db'); // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const { PORT, CLIENT_URL } = require('./config/keys'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª—é—á–∏ –∏–∑ keys.js
const userRoutes = require('./routes/userRoutes'); // –†–æ—É—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const scheduleRoutes = require('./routes/scheduleRoutes'); // –†–æ—É—Ç—ã –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
const { notFound, errorHandler } = require('./middlewares/errorMiddleware');
const path = require('path');
const syncLessonStats = require('./utils/syncMethods');
const cron = require('node-cron');

const fs = require('fs');
const uploadDir = path.join(__dirname, 'uploads');

if (!fs.existsSync(uploadDir)) {
    fs.mkdirSync(uploadDir, { recursive: true });
}

const app = express();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
connectDB();

// Middleware
app.use(cors({ origin: CLIENT_URL })); // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º CORS –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.use(bodyParser.json()); // –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON –≤ –∑–∞–ø—Ä–æ—Å–∞—Ö
app.use(bodyParser.urlencoded({ extended: true })); // –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º

// API –†–æ—É—Ç—ã
app.use('/api/users', userRoutes); // –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
app.use('/api/schedule', scheduleRoutes); // –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è

// –ì–ª–∞–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞)
app.get('/', (req, res) => {
    res.send('–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ');
});
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
app.use(notFound); // –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
app.use(errorHandler); // –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

// –ó–∞–ø—É—Å–∫ cron-–∑–∞–¥–∞—á–∏
cron.schedule('0 0 * * *', syncLessonStats);

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
