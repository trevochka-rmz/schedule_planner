require('dotenv').config();
const express = require('express');
const path = require('path');
const fs = require('fs');
const connectDB = require('./config/db');
const configureApp = require('./config');
const routes = require('./routes');
const { notFound, errorHandler } = require('./middlewares/errorMiddleware');
const syncLessonStats = require('./utils/syncMethods');
const cron = require('node-cron');

const app = express();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
connectDB();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ middleware
configureApp(app);

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ uploads, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
const uploadDir = path.join(__dirname, 'uploads');
if (!fs.existsSync(uploadDir)) {
    fs.mkdirSync(uploadDir, { recursive: true });
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
app.use('/api', routes);
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));

// –ì–ª–∞–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞)
app.get('/', (req, res) => {
    res.send('–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ');
});

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
app.use(notFound);
app.use(errorHandler);

// –ó–∞–ø—É—Å–∫ cron-–∑–∞–¥–∞—á–∏
cron.schedule('0 0 * * *', syncLessonStats);

module.exports = app;
